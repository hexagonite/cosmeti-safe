// <auto-generated />
using CosmetiSafe.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CosmetiSafe.Migrations.Migrations
{
    [DbContext(typeof(CosmetiSafeContext))]
    partial class CosmetiSafeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CosmetiSafe.Domain.Models.Category", b =>
                {
                    b.Property<byte[]>("Id")
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("CosmetiSafe.Domain.Models.Concern", b =>
                {
                    b.Property<byte[]>("Id")
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Concerns");
                });

            modelBuilder.Entity("CosmetiSafe.Domain.Models.Ingredient", b =>
                {
                    b.Property<byte[]>("Id")
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("DataAvailability")
                        .HasColumnType("int");

                    b.Property<string>("DependsOnUsageDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HazardScore")
                        .HasColumnType("int");

                    b.Property<int>("MinimumHazardScore")
                        .HasColumnType("int");

                    b.Property<string>("PrimaryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PrimaryName")
                        .IsUnique();

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("CosmetiSafe.Domain.Models.IngredientConcern", b =>
                {
                    b.Property<byte[]>("IngredientId")
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("ConcernId")
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("ConcernSeverity")
                        .HasColumnType("int");

                    b.HasKey("IngredientId", "ConcernId");

                    b.HasIndex("ConcernId");

                    b.ToTable("IngredientConcerns");
                });

            modelBuilder.Entity("CosmetiSafe.Domain.Models.IngredientContaminant", b =>
                {
                    b.Property<byte[]>("IngredientId")
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("ContaminantId")
                        .HasColumnType("varbinary(16)");

                    b.HasKey("IngredientId", "ContaminantId");

                    b.HasIndex("ContaminantId");

                    b.ToTable("IngredientContaminants");
                });

            modelBuilder.Entity("CosmetiSafe.Domain.Models.IngredientSynonym", b =>
                {
                    b.Property<byte[]>("Id")
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("IngredientId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("IngredientSynonyms");
                });

            modelBuilder.Entity("CosmetiSafe.Domain.Models.Product", b =>
                {
                    b.Property<byte[]>("Id")
                        .HasColumnType("varbinary(16)");

                    b.Property<decimal>("AverageIngredientScore")
                        .HasColumnType("decimal(2,1)");

                    b.Property<byte[]>("CategoryId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MarketedFor")
                        .HasColumnType("int");

                    b.Property<decimal>("MedianIngredientScore")
                        .HasColumnType("decimal(2,1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorstIngredientScore")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("CosmetiSafe.Domain.Models.ProductIngredient", b =>
                {
                    b.Property<byte[]>("ProductId")
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("IngredientId")
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("ProductIngredients");
                });

            modelBuilder.Entity("CosmetiSafe.Domain.Models.Store", b =>
                {
                    b.Property<byte[]>("Id")
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("CosmetiSafe.Domain.Models.StoreProduct", b =>
                {
                    b.Property<byte[]>("StoreId")
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("ProductId")
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(9,2)");

                    b.Property<string>("ProductUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StoreId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("StoreProducts");
                });

            modelBuilder.Entity("CosmetiSafe.Domain.Models.IngredientConcern", b =>
                {
                    b.HasOne("CosmetiSafe.Domain.Models.Concern", "Concern")
                        .WithMany("IngredientConcerns")
                        .HasForeignKey("ConcernId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosmetiSafe.Domain.Models.Ingredient", "Ingredient")
                        .WithMany("IngredientConcerns")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Concern");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("CosmetiSafe.Domain.Models.IngredientContaminant", b =>
                {
                    b.HasOne("CosmetiSafe.Domain.Models.Ingredient", "Contaminant")
                        .WithMany("ContaminantOf")
                        .HasForeignKey("ContaminantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CosmetiSafe.Domain.Models.Ingredient", "Ingredient")
                        .WithMany("Contaminants")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contaminant");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("CosmetiSafe.Domain.Models.IngredientSynonym", b =>
                {
                    b.HasOne("CosmetiSafe.Domain.Models.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("CosmetiSafe.Domain.Models.Product", b =>
                {
                    b.HasOne("CosmetiSafe.Domain.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CosmetiSafe.Domain.Models.ProductIngredient", b =>
                {
                    b.HasOne("CosmetiSafe.Domain.Models.Ingredient", "Ingredient")
                        .WithMany("ProductIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosmetiSafe.Domain.Models.Product", "Product")
                        .WithMany("ProductIngredients")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CosmetiSafe.Domain.Models.StoreProduct", b =>
                {
                    b.HasOne("CosmetiSafe.Domain.Models.Product", "Product")
                        .WithMany("StoreProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosmetiSafe.Domain.Models.Store", "Store")
                        .WithMany("StoreProducts")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("CosmetiSafe.Domain.Models.Concern", b =>
                {
                    b.Navigation("IngredientConcerns");
                });

            modelBuilder.Entity("CosmetiSafe.Domain.Models.Ingredient", b =>
                {
                    b.Navigation("ContaminantOf");

                    b.Navigation("Contaminants");

                    b.Navigation("IngredientConcerns");

                    b.Navigation("ProductIngredients");
                });

            modelBuilder.Entity("CosmetiSafe.Domain.Models.Product", b =>
                {
                    b.Navigation("ProductIngredients");

                    b.Navigation("StoreProducts");
                });

            modelBuilder.Entity("CosmetiSafe.Domain.Models.Store", b =>
                {
                    b.Navigation("StoreProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
